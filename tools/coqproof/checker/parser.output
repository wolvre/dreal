   0  $accept : %entry% $end

   1  main : precision con_list init_list ptree EOF
   2       | precision con_list init_list EOF
   3       | precision con_list init_list conflict_detected EOF

   4  precision :
   5            | PRECISION COLON FNUM

   6  con_list : con
   7           | con con_list

   8  con : LP EQ func func RP
   9      | LP LE func func RP
  10      | LP LT func func RP
  11      | LP GE func func RP
  12      | LP GT func func RP
  13      | LP NOT LP LE func func RP RP
  14      | LP NOT LP LT func func RP RP
  15      | LP NOT LP GE func func RP RP
  16      | LP NOT LP GT func func RP RP

  17  func_list : func
  18            | func func_list

  19  func : FNUM
  20       | ID
  21       | LP PLUS func_list RP
  22       | LP MINUS func RP
  23       | LP MINUS func func_list RP
  24       | LP AST func_list RP
  25       | LP SLASH func func RP
  26       | LP SQRT func RP
  27       | LP SAFESQRT func RP
  28       | LP SIN func RP
  29       | LP COS func RP
  30       | LP TAN func RP
  31       | LP ASIN func RP
  32       | LP ACOS func RP
  33       | LP ATAN func RP
  34       | LP ATAN2 func func RP
  35       | LP MATAN func RP
  36       | LP SINH func RP
  37       | LP COSH func RP
  38       | LP TANH func RP
  39       | LP LOG func RP
  40       | LP EXP func RP
  41       | LP CARET func FNUM RP

  42  ptree : before_pruning entry_list conflict_detected
  43        | before_pruning entry_list after_pruning entry_list HOLE
  44        | branched_on entry_list ptree ptree
  45        | before_pruning entry_list after_pruning entry_list ptree

  46  before_pruning : LB BEFORE PRUNING RB

  47  after_pruning : LB AFTER PRUNING RB

  48  branched_on : LB BRANCHED ON ID RB

  49  conflict_detected : LB CONFLICT DETECTED RB

  50  init : entry SEMICOLON

  51  init_list : init
  52            | init init_list

  53  entry : ID COLON LB FNUM COMMA FNUM RB
  54        | ID COLON LP MINUS INFTY COMMA FNUM RB
  55        | ID COLON LB FNUM COMMA PLUS INFTY RP
  56        | ID COLON LB FNUM COMMA INFTY RP
  57        | ID COLON LP MINUS INFTY COMMA PLUS INFTY RP
  58        | ID COLON LP MINUS INFTY COMMA INFTY RP
  59        | ID COLON FNUM

  60  entry_list : entry
  61             | entry SEMICOLON entry_list

  62  %entry% : '\001' main

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . main  (62)
	precision : .  (4)

	PRECISION  shift 3
	LP  reduce 4

	main  goto 4
	precision  goto 5


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	precision : PRECISION . COLON FNUM  (5)

	COLON  shift 6
	.  error


state 4
	%entry% : '\001' main .  (62)

	.  reduce 62


state 5
	main : precision . con_list init_list ptree EOF  (1)
	main : precision . con_list init_list EOF  (2)
	main : precision . con_list init_list conflict_detected EOF  (3)

	LP  shift 7
	.  error

	con  goto 8
	con_list  goto 9


state 6
	precision : PRECISION COLON . FNUM  (5)

	FNUM  shift 10
	.  error


state 7
	con : LP . EQ func func RP  (8)
	con : LP . LE func func RP  (9)
	con : LP . LT func func RP  (10)
	con : LP . GE func func RP  (11)
	con : LP . GT func func RP  (12)
	con : LP . NOT LP LE func func RP RP  (13)
	con : LP . NOT LP LT func func RP RP  (14)
	con : LP . NOT LP GE func func RP RP  (15)
	con : LP . NOT LP GT func func RP RP  (16)

	NOT  shift 11
	EQ  shift 12
	GE  shift 13
	LE  shift 14
	GT  shift 15
	LT  shift 16
	.  error


state 8
	con_list : con .  (6)
	con_list : con . con_list  (7)

	LP  shift 7
	ID  reduce 6

	con  goto 8
	con_list  goto 17


state 9
	main : precision con_list . init_list ptree EOF  (1)
	main : precision con_list . init_list EOF  (2)
	main : precision con_list . init_list conflict_detected EOF  (3)

	ID  shift 18
	.  error

	init_list  goto 19
	init  goto 20
	entry  goto 21


state 10
	precision : PRECISION COLON FNUM .  (5)

	.  reduce 5


state 11
	con : LP NOT . LP LE func func RP RP  (13)
	con : LP NOT . LP LT func func RP RP  (14)
	con : LP NOT . LP GE func func RP RP  (15)
	con : LP NOT . LP GT func func RP RP  (16)

	LP  shift 22
	.  error


state 12
	con : LP EQ . func func RP  (8)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 26


state 13
	con : LP GE . func func RP  (11)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 27


state 14
	con : LP LE . func func RP  (9)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 28


state 15
	con : LP GT . func func RP  (12)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 29


state 16
	con : LP LT . func func RP  (10)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 30


state 17
	con_list : con con_list .  (7)

	.  reduce 7


state 18
	entry : ID . COLON LB FNUM COMMA FNUM RB  (53)
	entry : ID . COLON LP MINUS INFTY COMMA FNUM RB  (54)
	entry : ID . COLON LB FNUM COMMA PLUS INFTY RP  (55)
	entry : ID . COLON LB FNUM COMMA INFTY RP  (56)
	entry : ID . COLON LP MINUS INFTY COMMA PLUS INFTY RP  (57)
	entry : ID . COLON LP MINUS INFTY COMMA INFTY RP  (58)
	entry : ID . COLON FNUM  (59)

	COLON  shift 31
	.  error


state 19
	main : precision con_list init_list . ptree EOF  (1)
	main : precision con_list init_list . EOF  (2)
	main : precision con_list init_list . conflict_detected EOF  (3)

	LB  shift 32
	EOF  shift 33
	.  error

	ptree  goto 34
	branched_on  goto 35
	conflict_detected  goto 36
	before_pruning  goto 37


state 20
	init_list : init .  (51)
	init_list : init . init_list  (52)

	ID  shift 18
	LB  reduce 51
	EOF  reduce 51

	init_list  goto 38
	init  goto 20
	entry  goto 21


state 21
	init : entry . SEMICOLON  (50)

	SEMICOLON  shift 39
	.  error


state 22
	con : LP NOT LP . LE func func RP RP  (13)
	con : LP NOT LP . LT func func RP RP  (14)
	con : LP NOT LP . GE func func RP RP  (15)
	con : LP NOT LP . GT func func RP RP  (16)

	GE  shift 40
	LE  shift 41
	GT  shift 42
	LT  shift 43
	.  error


state 23
	func : LP . PLUS func_list RP  (21)
	func : LP . MINUS func RP  (22)
	func : LP . MINUS func func_list RP  (23)
	func : LP . AST func_list RP  (24)
	func : LP . SLASH func func RP  (25)
	func : LP . SQRT func RP  (26)
	func : LP . SAFESQRT func RP  (27)
	func : LP . SIN func RP  (28)
	func : LP . COS func RP  (29)
	func : LP . TAN func RP  (30)
	func : LP . ASIN func RP  (31)
	func : LP . ACOS func RP  (32)
	func : LP . ATAN func RP  (33)
	func : LP . ATAN2 func func RP  (34)
	func : LP . MATAN func RP  (35)
	func : LP . SINH func RP  (36)
	func : LP . COSH func RP  (37)
	func : LP . TANH func RP  (38)
	func : LP . LOG func RP  (39)
	func : LP . EXP func RP  (40)
	func : LP . CARET func FNUM RP  (41)

	CARET  shift 44
	PLUS  shift 45
	MINUS  shift 46
	AST  shift 47
	SLASH  shift 48
	SIN  shift 49
	COS  shift 50
	TAN  shift 51
	SQRT  shift 52
	SAFESQRT  shift 53
	ASIN  shift 54
	ACOS  shift 55
	ATAN  shift 56
	ATAN2  shift 57
	MATAN  shift 58
	SINH  shift 59
	COSH  shift 60
	TANH  shift 61
	LOG  shift 62
	EXP  shift 63
	.  error


state 24
	func : FNUM .  (19)

	.  reduce 19


state 25
	func : ID .  (20)

	.  reduce 20


state 26
	con : LP EQ func . func RP  (8)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 64


state 27
	con : LP GE func . func RP  (11)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 65


state 28
	con : LP LE func . func RP  (9)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 66


state 29
	con : LP GT func . func RP  (12)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 67


state 30
	con : LP LT func . func RP  (10)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 68


state 31
	entry : ID COLON . LB FNUM COMMA FNUM RB  (53)
	entry : ID COLON . LP MINUS INFTY COMMA FNUM RB  (54)
	entry : ID COLON . LB FNUM COMMA PLUS INFTY RP  (55)
	entry : ID COLON . LB FNUM COMMA INFTY RP  (56)
	entry : ID COLON . LP MINUS INFTY COMMA PLUS INFTY RP  (57)
	entry : ID COLON . LP MINUS INFTY COMMA INFTY RP  (58)
	entry : ID COLON . FNUM  (59)

	LB  shift 69
	LP  shift 70
	FNUM  shift 71
	.  error


state 32
	before_pruning : LB . BEFORE PRUNING RB  (46)
	branched_on : LB . BRANCHED ON ID RB  (48)
	conflict_detected : LB . CONFLICT DETECTED RB  (49)

	BEFORE  shift 72
	BRANCHED  shift 73
	CONFLICT  shift 74
	.  error


state 33
	main : precision con_list init_list EOF .  (2)

	.  reduce 2


state 34
	main : precision con_list init_list ptree . EOF  (1)

	EOF  shift 75
	.  error


state 35
	ptree : branched_on . entry_list ptree ptree  (44)

	ID  shift 18
	.  error

	entry_list  goto 76
	entry  goto 77


state 36
	main : precision con_list init_list conflict_detected . EOF  (3)

	EOF  shift 78
	.  error


state 37
	ptree : before_pruning . entry_list conflict_detected  (42)
	ptree : before_pruning . entry_list after_pruning entry_list HOLE  (43)
	ptree : before_pruning . entry_list after_pruning entry_list ptree  (45)

	ID  shift 18
	.  error

	entry_list  goto 79
	entry  goto 77


state 38
	init_list : init init_list .  (52)

	.  reduce 52


state 39
	init : entry SEMICOLON .  (50)

	.  reduce 50


state 40
	con : LP NOT LP GE . func func RP RP  (15)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 80


state 41
	con : LP NOT LP LE . func func RP RP  (13)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 81


state 42
	con : LP NOT LP GT . func func RP RP  (16)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 82


state 43
	con : LP NOT LP LT . func func RP RP  (14)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 83


state 44
	func : LP CARET . func FNUM RP  (41)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 84


state 45
	func : LP PLUS . func_list RP  (21)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 85
	func_list  goto 86


state 46
	func : LP MINUS . func RP  (22)
	func : LP MINUS . func func_list RP  (23)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 87


state 47
	func : LP AST . func_list RP  (24)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 85
	func_list  goto 88


state 48
	func : LP SLASH . func func RP  (25)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 89


state 49
	func : LP SIN . func RP  (28)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 90


state 50
	func : LP COS . func RP  (29)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 91


state 51
	func : LP TAN . func RP  (30)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 92


state 52
	func : LP SQRT . func RP  (26)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 93


state 53
	func : LP SAFESQRT . func RP  (27)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 94


state 54
	func : LP ASIN . func RP  (31)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 95


state 55
	func : LP ACOS . func RP  (32)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 96


state 56
	func : LP ATAN . func RP  (33)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 97


state 57
	func : LP ATAN2 . func func RP  (34)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 98


state 58
	func : LP MATAN . func RP  (35)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 99


state 59
	func : LP SINH . func RP  (36)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 100


state 60
	func : LP COSH . func RP  (37)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 101


state 61
	func : LP TANH . func RP  (38)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 102


state 62
	func : LP LOG . func RP  (39)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 103


state 63
	func : LP EXP . func RP  (40)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 104


state 64
	con : LP EQ func func . RP  (8)

	RP  shift 105
	.  error


state 65
	con : LP GE func func . RP  (11)

	RP  shift 106
	.  error


state 66
	con : LP LE func func . RP  (9)

	RP  shift 107
	.  error


state 67
	con : LP GT func func . RP  (12)

	RP  shift 108
	.  error


state 68
	con : LP LT func func . RP  (10)

	RP  shift 109
	.  error


state 69
	entry : ID COLON LB . FNUM COMMA FNUM RB  (53)
	entry : ID COLON LB . FNUM COMMA PLUS INFTY RP  (55)
	entry : ID COLON LB . FNUM COMMA INFTY RP  (56)

	FNUM  shift 110
	.  error


state 70
	entry : ID COLON LP . MINUS INFTY COMMA FNUM RB  (54)
	entry : ID COLON LP . MINUS INFTY COMMA PLUS INFTY RP  (57)
	entry : ID COLON LP . MINUS INFTY COMMA INFTY RP  (58)

	MINUS  shift 111
	.  error


state 71
	entry : ID COLON FNUM .  (59)

	.  reduce 59


state 72
	before_pruning : LB BEFORE . PRUNING RB  (46)

	PRUNING  shift 112
	.  error


state 73
	branched_on : LB BRANCHED . ON ID RB  (48)

	ON  shift 113
	.  error


state 74
	conflict_detected : LB CONFLICT . DETECTED RB  (49)

	DETECTED  shift 114
	.  error


state 75
	main : precision con_list init_list ptree EOF .  (1)

	.  reduce 1


state 76
	ptree : branched_on entry_list . ptree ptree  (44)

	LB  shift 115
	.  error

	ptree  goto 116
	branched_on  goto 35
	before_pruning  goto 37


state 77
	entry_list : entry .  (60)
	entry_list : entry . SEMICOLON entry_list  (61)

	SEMICOLON  shift 117
	LB  reduce 60
	HOLE  reduce 60


state 78
	main : precision con_list init_list conflict_detected EOF .  (3)

	.  reduce 3


state 79
	ptree : before_pruning entry_list . conflict_detected  (42)
	ptree : before_pruning entry_list . after_pruning entry_list HOLE  (43)
	ptree : before_pruning entry_list . after_pruning entry_list ptree  (45)

	LB  shift 118
	.  error

	conflict_detected  goto 119
	after_pruning  goto 120


state 80
	con : LP NOT LP GE func . func RP RP  (15)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 121


state 81
	con : LP NOT LP LE func . func RP RP  (13)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 122


state 82
	con : LP NOT LP GT func . func RP RP  (16)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 123


state 83
	con : LP NOT LP LT func . func RP RP  (14)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 124


state 84
	func : LP CARET func . FNUM RP  (41)

	FNUM  shift 125
	.  error


state 85
	func_list : func .  (17)
	func_list : func . func_list  (18)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	RP  reduce 17

	func  goto 85
	func_list  goto 126


state 86
	func : LP PLUS func_list . RP  (21)

	RP  shift 127
	.  error


state 87
	func : LP MINUS func . RP  (22)
	func : LP MINUS func . func_list RP  (23)

	LP  shift 23
	RP  shift 128
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 85
	func_list  goto 129


state 88
	func : LP AST func_list . RP  (24)

	RP  shift 130
	.  error


state 89
	func : LP SLASH func . func RP  (25)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 131


state 90
	func : LP SIN func . RP  (28)

	RP  shift 132
	.  error


state 91
	func : LP COS func . RP  (29)

	RP  shift 133
	.  error


state 92
	func : LP TAN func . RP  (30)

	RP  shift 134
	.  error


state 93
	func : LP SQRT func . RP  (26)

	RP  shift 135
	.  error


state 94
	func : LP SAFESQRT func . RP  (27)

	RP  shift 136
	.  error


state 95
	func : LP ASIN func . RP  (31)

	RP  shift 137
	.  error


state 96
	func : LP ACOS func . RP  (32)

	RP  shift 138
	.  error


state 97
	func : LP ATAN func . RP  (33)

	RP  shift 139
	.  error


state 98
	func : LP ATAN2 func . func RP  (34)

	LP  shift 23
	FNUM  shift 24
	ID  shift 25
	.  error

	func  goto 140


state 99
	func : LP MATAN func . RP  (35)

	RP  shift 141
	.  error


state 100
	func : LP SINH func . RP  (36)

	RP  shift 142
	.  error


state 101
	func : LP COSH func . RP  (37)

	RP  shift 143
	.  error


state 102
	func : LP TANH func . RP  (38)

	RP  shift 144
	.  error


state 103
	func : LP LOG func . RP  (39)

	RP  shift 145
	.  error


state 104
	func : LP EXP func . RP  (40)

	RP  shift 146
	.  error


state 105
	con : LP EQ func func RP .  (8)

	.  reduce 8


state 106
	con : LP GE func func RP .  (11)

	.  reduce 11


state 107
	con : LP LE func func RP .  (9)

	.  reduce 9


state 108
	con : LP GT func func RP .  (12)

	.  reduce 12


state 109
	con : LP LT func func RP .  (10)

	.  reduce 10


state 110
	entry : ID COLON LB FNUM . COMMA FNUM RB  (53)
	entry : ID COLON LB FNUM . COMMA PLUS INFTY RP  (55)
	entry : ID COLON LB FNUM . COMMA INFTY RP  (56)

	COMMA  shift 147
	.  error


state 111
	entry : ID COLON LP MINUS . INFTY COMMA FNUM RB  (54)
	entry : ID COLON LP MINUS . INFTY COMMA PLUS INFTY RP  (57)
	entry : ID COLON LP MINUS . INFTY COMMA INFTY RP  (58)

	INFTY  shift 148
	.  error


state 112
	before_pruning : LB BEFORE PRUNING . RB  (46)

	RB  shift 149
	.  error


state 113
	branched_on : LB BRANCHED ON . ID RB  (48)

	ID  shift 150
	.  error


state 114
	conflict_detected : LB CONFLICT DETECTED . RB  (49)

	RB  shift 151
	.  error


state 115
	before_pruning : LB . BEFORE PRUNING RB  (46)
	branched_on : LB . BRANCHED ON ID RB  (48)

	BEFORE  shift 72
	BRANCHED  shift 73
	.  error


state 116
	ptree : branched_on entry_list ptree . ptree  (44)

	LB  shift 115
	.  error

	ptree  goto 152
	branched_on  goto 35
	before_pruning  goto 37


state 117
	entry_list : entry SEMICOLON . entry_list  (61)

	ID  shift 18
	.  error

	entry_list  goto 153
	entry  goto 77


state 118
	after_pruning : LB . AFTER PRUNING RB  (47)
	conflict_detected : LB . CONFLICT DETECTED RB  (49)

	AFTER  shift 154
	CONFLICT  shift 74
	.  error


state 119
	ptree : before_pruning entry_list conflict_detected .  (42)

	.  reduce 42


state 120
	ptree : before_pruning entry_list after_pruning . entry_list HOLE  (43)
	ptree : before_pruning entry_list after_pruning . entry_list ptree  (45)

	ID  shift 18
	.  error

	entry_list  goto 155
	entry  goto 77


state 121
	con : LP NOT LP GE func func . RP RP  (15)

	RP  shift 156
	.  error


state 122
	con : LP NOT LP LE func func . RP RP  (13)

	RP  shift 157
	.  error


state 123
	con : LP NOT LP GT func func . RP RP  (16)

	RP  shift 158
	.  error


state 124
	con : LP NOT LP LT func func . RP RP  (14)

	RP  shift 159
	.  error


state 125
	func : LP CARET func FNUM . RP  (41)

	RP  shift 160
	.  error


state 126
	func_list : func func_list .  (18)

	.  reduce 18


state 127
	func : LP PLUS func_list RP .  (21)

	.  reduce 21


state 128
	func : LP MINUS func RP .  (22)

	.  reduce 22


state 129
	func : LP MINUS func func_list . RP  (23)

	RP  shift 161
	.  error


state 130
	func : LP AST func_list RP .  (24)

	.  reduce 24


state 131
	func : LP SLASH func func . RP  (25)

	RP  shift 162
	.  error


state 132
	func : LP SIN func RP .  (28)

	.  reduce 28


state 133
	func : LP COS func RP .  (29)

	.  reduce 29


state 134
	func : LP TAN func RP .  (30)

	.  reduce 30


state 135
	func : LP SQRT func RP .  (26)

	.  reduce 26


state 136
	func : LP SAFESQRT func RP .  (27)

	.  reduce 27


state 137
	func : LP ASIN func RP .  (31)

	.  reduce 31


state 138
	func : LP ACOS func RP .  (32)

	.  reduce 32


state 139
	func : LP ATAN func RP .  (33)

	.  reduce 33


state 140
	func : LP ATAN2 func func . RP  (34)

	RP  shift 163
	.  error


state 141
	func : LP MATAN func RP .  (35)

	.  reduce 35


state 142
	func : LP SINH func RP .  (36)

	.  reduce 36


state 143
	func : LP COSH func RP .  (37)

	.  reduce 37


state 144
	func : LP TANH func RP .  (38)

	.  reduce 38


state 145
	func : LP LOG func RP .  (39)

	.  reduce 39


state 146
	func : LP EXP func RP .  (40)

	.  reduce 40


state 147
	entry : ID COLON LB FNUM COMMA . FNUM RB  (53)
	entry : ID COLON LB FNUM COMMA . PLUS INFTY RP  (55)
	entry : ID COLON LB FNUM COMMA . INFTY RP  (56)

	PLUS  shift 164
	INFTY  shift 165
	FNUM  shift 166
	.  error


state 148
	entry : ID COLON LP MINUS INFTY . COMMA FNUM RB  (54)
	entry : ID COLON LP MINUS INFTY . COMMA PLUS INFTY RP  (57)
	entry : ID COLON LP MINUS INFTY . COMMA INFTY RP  (58)

	COMMA  shift 167
	.  error


state 149
	before_pruning : LB BEFORE PRUNING RB .  (46)

	.  reduce 46


state 150
	branched_on : LB BRANCHED ON ID . RB  (48)

	RB  shift 168
	.  error


state 151
	conflict_detected : LB CONFLICT DETECTED RB .  (49)

	.  reduce 49


state 152
	ptree : branched_on entry_list ptree ptree .  (44)

	.  reduce 44


state 153
	entry_list : entry SEMICOLON entry_list .  (61)

	.  reduce 61


state 154
	after_pruning : LB AFTER . PRUNING RB  (47)

	PRUNING  shift 169
	.  error


state 155
	ptree : before_pruning entry_list after_pruning entry_list . HOLE  (43)
	ptree : before_pruning entry_list after_pruning entry_list . ptree  (45)

	LB  shift 115
	HOLE  shift 170
	.  error

	ptree  goto 171
	branched_on  goto 35
	before_pruning  goto 37


state 156
	con : LP NOT LP GE func func RP . RP  (15)

	RP  shift 172
	.  error


state 157
	con : LP NOT LP LE func func RP . RP  (13)

	RP  shift 173
	.  error


state 158
	con : LP NOT LP GT func func RP . RP  (16)

	RP  shift 174
	.  error


state 159
	con : LP NOT LP LT func func RP . RP  (14)

	RP  shift 175
	.  error


state 160
	func : LP CARET func FNUM RP .  (41)

	.  reduce 41


state 161
	func : LP MINUS func func_list RP .  (23)

	.  reduce 23


state 162
	func : LP SLASH func func RP .  (25)

	.  reduce 25


state 163
	func : LP ATAN2 func func RP .  (34)

	.  reduce 34


state 164
	entry : ID COLON LB FNUM COMMA PLUS . INFTY RP  (55)

	INFTY  shift 176
	.  error


state 165
	entry : ID COLON LB FNUM COMMA INFTY . RP  (56)

	RP  shift 177
	.  error


state 166
	entry : ID COLON LB FNUM COMMA FNUM . RB  (53)

	RB  shift 178
	.  error


state 167
	entry : ID COLON LP MINUS INFTY COMMA . FNUM RB  (54)
	entry : ID COLON LP MINUS INFTY COMMA . PLUS INFTY RP  (57)
	entry : ID COLON LP MINUS INFTY COMMA . INFTY RP  (58)

	PLUS  shift 179
	INFTY  shift 180
	FNUM  shift 181
	.  error


state 168
	branched_on : LB BRANCHED ON ID RB .  (48)

	.  reduce 48


state 169
	after_pruning : LB AFTER PRUNING . RB  (47)

	RB  shift 182
	.  error


state 170
	ptree : before_pruning entry_list after_pruning entry_list HOLE .  (43)

	.  reduce 43


state 171
	ptree : before_pruning entry_list after_pruning entry_list ptree .  (45)

	.  reduce 45


state 172
	con : LP NOT LP GE func func RP RP .  (15)

	.  reduce 15


state 173
	con : LP NOT LP LE func func RP RP .  (13)

	.  reduce 13


state 174
	con : LP NOT LP GT func func RP RP .  (16)

	.  reduce 16


state 175
	con : LP NOT LP LT func func RP RP .  (14)

	.  reduce 14


state 176
	entry : ID COLON LB FNUM COMMA PLUS INFTY . RP  (55)

	RP  shift 183
	.  error


state 177
	entry : ID COLON LB FNUM COMMA INFTY RP .  (56)

	.  reduce 56


state 178
	entry : ID COLON LB FNUM COMMA FNUM RB .  (53)

	.  reduce 53


state 179
	entry : ID COLON LP MINUS INFTY COMMA PLUS . INFTY RP  (57)

	INFTY  shift 184
	.  error


state 180
	entry : ID COLON LP MINUS INFTY COMMA INFTY . RP  (58)

	RP  shift 185
	.  error


state 181
	entry : ID COLON LP MINUS INFTY COMMA FNUM . RB  (54)

	RB  shift 186
	.  error


state 182
	after_pruning : LB AFTER PRUNING RB .  (47)

	.  reduce 47


state 183
	entry : ID COLON LB FNUM COMMA PLUS INFTY RP .  (55)

	.  reduce 55


state 184
	entry : ID COLON LP MINUS INFTY COMMA PLUS INFTY . RP  (57)

	RP  shift 187
	.  error


state 185
	entry : ID COLON LP MINUS INFTY COMMA INFTY RP .  (58)

	.  reduce 58


state 186
	entry : ID COLON LP MINUS INFTY COMMA FNUM RB .  (54)

	.  reduce 54


state 187
	entry : ID COLON LP MINUS INFTY COMMA PLUS INFTY RP .  (57)

	.  reduce 57


53 terminals, 17 nonterminals
63 grammar rules, 188 states
