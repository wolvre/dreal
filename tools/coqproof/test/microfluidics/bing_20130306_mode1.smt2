(set-logic QF_NRA_ODE)
(declare-fun w_0_1_t () Real)
(declare-fun w_0_1_0 () Real)
(declare-fun v_0_1_t () Real)
(declare-fun v_0_1_0 () Real)
(declare-fun u_0_1_t () Real)
(declare-fun u_0_1_0 () Real)
(declare-fun s_0_1_t () Real)
(declare-fun s_0_1_0 () Real)
(declare-fun time_1 () Real)
(define-ode 1 (= d/dt[u_0_1] (((2.7182 + (((u_0_1 - 0.3) * (1.55 - u_0_1)) * (v_0_1 * 9.0909))) + (w_0_1 * (s_0_1 * 0.5298))) - (0.33331 * u_0_1))))
(define-ode 1 (= d/dt[v_0_1] ((0.0 - v_0_1) * 0.68936)))
(define-ode 1 (= d/dt[w_0_1] ((0.0 - w_0_1) * 0.005)))
(define-ode 1 (= d/dt[s_0_1] (((1.0 / (1.001 + (exp ((-2.0 * (2.0994 * (u_0_1 - 0.9087))))))) * 0.0625) - (s_0_1 * 0.0625))))
(assert (<= 0.95 w_0_1_t))
(assert (<= w_0_1_t 1.0))
(assert (<= 0.95 w_0_1_0))
(assert (<= w_0_1_0 1.0))
(assert (<= 0.95 v_0_1_t))
(assert (<= v_0_1_t 1.0))
(assert (<= 0.95 v_0_1_0))
(assert (<= v_0_1_0 1.0))
(assert (<= 0.001 u_0_1_t))
(assert (<= u_0_1_t 2.0))
(assert (<= 0.001 u_0_1_0))
(assert (<= u_0_1_0 2.0))
(assert (<= 0.001 s_0_1_t))
(assert (<= s_0_1_t 0.01))
(assert (<= 0.001 s_0_1_0))
(assert (<= s_0_1_0 0.01))
(assert (<= 0.0 time_1))
(assert (<= time_1 0.4))
(assert (and
(= u_0_1_0 0.3)
(= v_0_1_0 1.0)
(= w_0_1_0 1.0)
(= s_0_1_0 0.001)
(>  u_0_1_t 1.95)
(>= v_0_1_t 0.95)
(>= w_0_1_t 0.95)
(>= s_0_1_t 0.0)))
(check-sat)
(exit)
